name: Build and Push to ECR

on:
  push:
    branches: [ master ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: |
          mvn clean package -DskipTests
          echo "JAR file:"
          ls -la target/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          # Get ECR details from secrets
          ECR_REGISTRY=${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG=${{ github.sha }}
          echo "ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}"
          echo "ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}"
          echo "AWS_REGION: ${{ secrets.AWS_REGION }}"
          echo "IMAGE_TAG: ${{ github.sha }}"
          
          #authenticate
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
    
          # Build and tag the image
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          # Push the image
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest